name: CI - StackView

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1

    steps:
      - name: 📥 Cloner le dépôt
        uses: actions/checkout@v3

      - name: 🐋 Lancer les containers Docker
        run: docker compose up -d --build

      - name: 🕓 Attendre que le dashboard soit prêt (healthcheck)
        run: |
          for i in {1..20}; do
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' dashboard || echo "no-container")
            echo "⏳ Statut santé du dashboard : $STATUS"
            if [ "$STATUS" == "healthy" ]; then
              echo "✅ Dashboard prêt après $i tentatives"
              exit 0
            fi
            sleep 3
          done
          echo "❌ Dashboard non prêt après 60s"
          docker logs dashboard || true
          exit 1

      - name: 🔍 Vérifier que le frontend répond
        run: |
          curl -s http://localhost:3333 | grep "<!DOCTYPE html>" || {
            echo "❌ Frontend ne répond pas !"
            exit 1
          }

      - name: ✅ Lint JavaScript (dashboard/front)
        run: |
          npm install eslint --prefix dashboard
          npx eslint dashboard/front/*.js || exit 1

      - name: 🐳 Vérifier les containers actifs
        run: |
          echo "🧪 Containers en cours :"
          docker ps
          [ "$(docker ps -q | wc -l)" -ge 3 ] || {
            echo "❌ Moins de 3 containers actifs (dashboard + 2 scripts attendus)"
            exit 1
          }

      - name: 📦 Logs dashboard en cas d'erreur
        if: ${{ failure() }}
        run: docker logs dashboard || true
